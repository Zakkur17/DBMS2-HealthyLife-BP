-- Master script to create all HealthyLife tables
-- File: 01_create_tables.sql

-- Defines the roles within the HealthyLife application
CREATE TABLE hle_roles (
    id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name   VARCHAR2(50) CONSTRAINT hle_roles_name_uk UNIQUE NOT NULL
);

-- Stores user account information for all roles
CREATE TABLE hle_users (
    id                      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_id                 NUMBER NOT NULL, -- Foreign key constraint komt later
    username                VARCHAR2(100) CONSTRAINT hle_users_username_uk UNIQUE NOT NULL,
    password_hash           VARCHAR2(255) NOT NULL,
    full_name               VARCHAR2(255),
    email                   VARCHAR2(255) CONSTRAINT hle_users_email_uk UNIQUE NOT NULL,
    phone_number            VARCHAR2(20),
    is_active               NUMBER(1) DEFAULT 1 NOT NULL
                            CONSTRAINT hle_users_active_chk CHECK (is_active IN (0, 1)), -- 0=false, 1=true
    registration_approved   NUMBER(1) DEFAULT 0 NOT NULL
                            CONSTRAINT hle_users_reg_appr_chk CHECK (registration_approved IN (0, 1)),
    approved_by_user_id     NUMBER, -- Foreign key constraint komt later
    created_at              TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Defines the different types of memberships available
CREATE TABLE hle_membership_types (
    id             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type_name      VARCHAR2(100) CONSTRAINT hle_mem_types_name_uk UNIQUE NOT NULL,
    description    CLOB, -- Use CLOB for potentially long text
    monthly_rate   NUMBER(10, 2) NOT NULL,
    benefits       CLOB,
    is_available   NUMBER(1) DEFAULT 1 NOT NULL
                   CONSTRAINT hle_mem_types_avail_chk CHECK (is_available IN (0, 1)) -- 0=false, 1=true
);

-- Stores the membership history and status for each user
CREATE TABLE hle_memberships (
    id                   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id              NUMBER NOT NULL, -- FK constraint later
    membership_type_id   NUMBER NOT NULL, -- FK constraint later
    start_date           DATE NOT NULL,
    end_date             DATE NOT NULL,
    status               VARCHAR2(50) DEFAULT 'Pending' NOT NULL
                         CONSTRAINT hle_memberships_status_chk CHECK (status IN ('Pending', 'Active', 'Expired', 'Cancelled')),
    created_at           TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Defines the physical locations/rooms within the fitness center
CREATE TABLE hle_locations (
    id              NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    location_name   VARCHAR2(100) CONSTRAINT hle_locations_name_uk UNIQUE NOT NULL,
    capacity        NUMBER,
    description     CLOB
);

-- Defines the types of classes offered (template for scheduled classes)
CREATE TABLE hle_classes (
    id                        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class_name                VARCHAR2(100) NOT NULL,
    description               CLOB,
    default_duration_minutes  NUMBER,
    category                  VARCHAR2(50)
);

-- Represents specific instances of classes scheduled at a certain time/location
CREATE TABLE hle_scheduled_classes (
    id                   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class_id             NUMBER NOT NULL, -- FK constraint later
    instructor_user_id   NUMBER NOT NULL, -- FK constraint later (to hle_users)
    location_id          NUMBER NOT NULL, -- FK constraint later
    start_time           TIMESTAMP NOT NULL,
    end_time             TIMESTAMP NOT NULL,
    max_attendees        NUMBER NOT NULL,
    current_attendees    NUMBER DEFAULT 0 NOT NULL,
    status               VARCHAR2(50) DEFAULT 'Scheduled' NOT NULL
                         CONSTRAINT hle_sched_classes_status_chk CHECK (status IN ('Scheduled', 'Full', 'Cancelled', 'Completed')),
    created_at           TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Tracks which members have signed up for which scheduled classes
CREATE TABLE hle_class_signups (
    id                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id             NUMBER NOT NULL, -- FK constraint later (to hle_users)
    scheduled_class_id  NUMBER NOT NULL, -- FK constraint later
    signup_time         TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    attendance_status   VARCHAR2(50) DEFAULT 'Signed Up' NOT NULL
                        CONSTRAINT hle_signups_att_stat_chk CHECK (attendance_status IN ('Signed Up', 'Attended', 'No-show', 'Cancelled by Member', 'Cancelled by Staff'))
    -- Unique constraint on (user_id, scheduled_class_id) comes later
);

-- Stores member progress data like weight, BMI, etc.
CREATE TABLE hle_progress_measurements (
    id                      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id                 NUMBER NOT NULL, -- FK constraint later
    measurement_date        DATE DEFAULT SYSDATE NOT NULL,
    weight_kg               NUMBER(5, 2),
    height_cm               NUMBER(5, 1),
    bmi                     NUMBER(4, 2),
    body_fat_percentage     NUMBER(4, 2),
    notes                   CLOB,
    recorded_by_user_id     NUMBER NOT NULL, -- FK constraint later (to hle_users)
    created_at              TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Stores fitness goals set by members
CREATE TABLE hle_fitness_goals (
    id             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id        NUMBER NOT NULL, -- FK constraint later
    description    CLOB NOT NULL,
    goal_type      VARCHAR2(50),
    target_value   VARCHAR2(100),
    target_date    DATE,
    status         VARCHAR2(50) DEFAULT 'Active' NOT NULL
                   CONSTRAINT hle_goals_status_chk CHECK (status IN ('Active', 'Achieved', 'Cancelled')),
    created_at     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Defines categories and types of fitness equipment
CREATE TABLE hle_equipment_types (
    id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type_name  VARCHAR2(100) CONSTRAINT hle_eq_types_name_uk UNIQUE NOT NULL,
    category   VARCHAR2(50)
);

-- Represents individual pieces of equipment in the gym
CREATE TABLE hle_equipment (
    id                    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    equipment_type_id     NUMBER NOT NULL, -- FK constraint later
    identifier            VARCHAR2(100) CONSTRAINT hle_equipment_ident_uk UNIQUE NOT NULL,
    location_id           NUMBER,          -- FK constraint later
    status                VARCHAR2(50) DEFAULT 'Operational' NOT NULL
                          CONSTRAINT hle_equipment_status_chk CHECK (status IN ('Operational', 'Needs Maintenance', 'Out of Service')),
    purchase_date         DATE,
    last_maintenance_date DATE
);

-- Logs maintenance activities performed on equipment
CREATE TABLE hle_maintenance_logs (
    id                     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    equipment_id           NUMBER NOT NULL, -- FK constraint later
    log_date               DATE DEFAULT SYSDATE NOT NULL,
    description            CLOB NOT NULL,
    performed_by_user_id   NUMBER NOT NULL, -- FK constraint later (to hle_users)
    cost                   NUMBER(10, 2)
);

-- End of table creation script